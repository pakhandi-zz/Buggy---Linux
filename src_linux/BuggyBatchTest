#!/bin/bash

red='\033[0;31m'
lightGreen='\033[1;32m'
noColor='\033[0m'

doColor=0
executable=''
lang=''

inPrefix='in'
inSuffix=''
inPath=''

outPrefix='out'
outSuffix=''
outPath=''

showIn=0
showOut=0
showUserOut=0

while test $# -gt 0; do
	case "$1" in
		-h|--help)
			echo "BuggyBatchTest -f [FILE] [OPTION]"
			echo "Run FILE on input files and match the output with output files"
			echo " "
			echo "Example : BuggyBatchTest -f ~/dir/prog -c -l cpp"
			echo "It is advisable to run the command in the directory of the executable"
			echo "Example : BuggyBatchTest -f prog -c -l cpp"
			echo " "
			echo "options:"
			echo "-h, --help                 show brief help"
			echo "-f                         specify the executable"
			echo "-c                         set color on"
			echo "--inPrefix                 Prefix for input files"
			echo "--inSuffix                 Suffix for input files"
			echo "--inPath                   Path for input files"
			echo "-l                         Language : cpp or java"
			echo "--outPrefix                Prefix for output files"
			echo "--outSuffix                Suffix for output files"
			echo "--outPath                  Path for output files"
			echo "--showIn                   Show Input"
			echo "--showOut                  Show correct output"
			echo "--showUserOut              Show output generated by user's code"
			exit 0
			;;
		--inPrefix)
			shift
			inPrefix=$1
			shift
			;;
		--inSuffix)
			shift
			inSuffix=$1
			shift
			;;
		--inPath)
			shift
			inPath=$1
			shift
			;;
		--outPrefix)
			shift
			outPrefix=$1
			shift
			;;
		--outSuffix)
			shift
			outSuffix=$1
			shift
			;;
		--outPath)
			shift
			outPath=$1
			shift
			;;
		-f)
			shift
			executable=$1
			shift
			;;
		-c)
			doColor=1
			shift
			;;
		-l)
			shift
			lang=$1
			shift
			;;
		--showIn)
			showIn=1
			shift
			;;
		--showOut)
			showOut=1
			shift
			;;
		--showUserOut)
			showUserOut=1
			shift
			;;
		*)
			break
			;;
	esac
done

if [[ ( "$lang" != "java" && (! -f $executable) ) || (! "$executable") ]]; then
	echo "The executable doesn't exist !!"
	exit
fi

if [[ "$lang" != "java" && "$lang" != "cpp" ]]; then
	echo "Wrong language code !!"
	exit
fi

for (( i=0; i <= 100; i++ ))
do
	inFile="$inPath$inPrefix$i$inSuffix"
	outFile="$outPath$outPrefix$i$outSuffix"

	if [ -f $inFile ]; then
		printf "Running Test-case $i : \n"
		
		if [ $showIn -eq 1 ]
		then
			printf "Input : "
			cat $inFile
			printf "\n"
		fi

		if [ "$lang" = "cpp" ]; then
			timeout 5s ./$executable < $inFile > o
		elif [ "$lang" = "java" ]; then
			java $executable < $inFile > o
		fi

		if [ $showUserOut -eq 1 ]
		then
			printf "Your Output : "
			cat o
			printf "\n"
		fi

		if [ $showOut -eq 1 ]
		then
			printf "Correct Output : "
			cat $outFile
			printf "\n"
		fi

		diff -w $outFile o >/dev/null;REPLY=$?
		if [ ${REPLY} -eq 0 ]
		then
			if [ $doColor -eq 1 ] 
			then 
				printf "Exact matching : ${lightGreen}PASS${noColor}\n"
			else
				printf "Exact matching : PASS\n"
			fi
		else
			if [ $doColor -eq 1 ] 
			then 
				printf "Exact matching : ${red}FAIL${noColor}\n"
			else
				printf "Exact matching : FAIL\n"
			fi
		fi
		printf "======================================\n"
	fi
done