#!/bin/bash

red='\033[0;31m'
lightGreen='\033[1;32m'
noColor='\033[0m'

doColor=0
executable=''

inPrefix='in'
inSuffix=''
inPath=''

outPrefix='out'
outSuffix=''
outPath=''

while test $# -gt 0; do
		case "$1" in
			-h|--help)
				echo "BuggyBatchTest [OPTION] [FILE] [OPTION]"
				echo "Run FILE on in files and match the output with out files"
				echo " "
				echo "Example : BuggyBatchTest -f prog -c"
				echo " "
				echo "options:"
				echo "-h, --help                show brief help"
				echo "-f                        specify name of executable"
				echo "-c                        set color on"
				exit 0
				;;
			-inPrefix)
				shift
				inPrefix=$1
				shift
				;;
			-inSuffix)
				shift
				inSuffix=$1
				shift
				;;
			-inPath)
				shift
				inPath=$1
				shift
				;;
			-outPrefix)
				shift
				outPrefix=$1
				shift
				;;
			-outSuffix)
				shift
				outSuffix=$1
				shift
				;;
			-outPath)
				shift
				outPath=$1
				shift
				;;
			-f)
				shift
				executable=$1
				shift
				;;
			-c)
				doColor=1
				shift
				;;
			*)
				break
				;;
		esac
done

for (( i=0; i <= 100; i++ ))
do
	inFile="$inPath$inPrefix$i$inSuffix"
	outFile="$outPath$outPrefix$i$outSuffix"

	if [ -f $inFile ]; then
		printf "Running Test-case $i : \n"
		printf "Input : "
		cat $inFile
		printf "\n"
		./$executable < $inFile > o
		printf "Your Output : "
		cat o
		printf "\n"
		printf "Correct Output : "
		cat $outFile
		printf "\n"

		diff -w $outFile o >/dev/null;REPLY=$?
		if [ ${REPLY} -eq 0 ]
		then
			if [ $doColor -eq 1 ] 
			then 
				printf "Exact matching : ${lightGreen}PASS${noColor}\n"
			else
				printf "Exact matching : PASS\n"
			fi
		else
			if [ $doColor -eq 1 ] 
			then 
				printf "Exact matching : ${red}FAIL${noColor}\n"
			else
				printf "Exact matching : FAIL\n"
			fi
		fi
		printf "======================================\n"
	fi
done